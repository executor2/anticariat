<?php

namespace Proxies\__CG__\Shop\AnticariatBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \Shop\AnticariatBundle\Entity\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'name', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'author', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'yearOfPublication', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'createdAt', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'updateAt', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'quantity', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'noOfPages', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'noOfVolume', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'collection', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'isbn', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'format');
        }

        return array('__isInitialized__', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'id', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'name', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'author', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'yearOfPublication', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'createdAt', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'updateAt', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'quantity', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'noOfPages', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'noOfVolume', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'collection', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'isbn', '' . "\0" . 'Shop\\AnticariatBundle\\Entity\\Book' . "\0" . 'format');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor($author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', array($author));

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', array());

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearOfPublication($yearOfPublication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearOfPublication', array($yearOfPublication));

        return parent::setYearOfPublication($yearOfPublication);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearOfPublication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearOfPublication', array());

        return parent::getYearOfPublication();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAt($updateAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAt', array($updateAt));

        return parent::setUpdateAt($updateAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAt', array());

        return parent::getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', array($quantity));

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', array());

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoOfPages($noOfPages)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoOfPages', array($noOfPages));

        return parent::setNoOfPages($noOfPages);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoOfPages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoOfPages', array());

        return parent::getNoOfPages();
    }

    /**
     * {@inheritDoc}
     */
    public function setNoOfVolume($noOfVolume)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNoOfVolume', array($noOfVolume));

        return parent::setNoOfVolume($noOfVolume);
    }

    /**
     * {@inheritDoc}
     */
    public function getNoOfVolume()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNoOfVolume', array());

        return parent::getNoOfVolume();
    }

    /**
     * {@inheritDoc}
     */
    public function setCollection($collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCollection', array($collection));

        return parent::setCollection($collection);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollection', array());

        return parent::getCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn($isbn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', array($isbn));

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', array());

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormat($format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormat', array($format));

        return parent::setFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormat', array());

        return parent::getFormat();
    }

}
